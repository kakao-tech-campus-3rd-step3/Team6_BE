name: Build and Deploy to EC2

on:
  push:
    branches:
      - develop
      - refactor/#30

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # 1. 코드 체크아웃
      - name: Checkout code
        uses: actions/checkout@v4

      # 2. JDK 설정 (Spring Boot 빌드)
      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'corretto'

      # 3. 의존성 설치 및 빌드
      - name: Make gradlew executable
        run: chmod +x ./gradlew

      - name: Build Spring Boot JAR
        run: ./gradlew clean bootJar

      # 4. DockerHub 로그인
      - name: Log in to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # 5. Docker 이미지 빌드 및 푸시 (Buildx 없이)
      - name: Build & Push Docker image
        run: |
          docker build -t kangtaehyun1107/ice-breaker:${{ github.sha }} .
          docker push kangtaehyun1107/ice-breaker:${{ github.sha }}

      # 6. deploy.sh 복사
      - name: Copy deploy.sh to EC2
        uses: appleboy/scp-action@v1
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_KEY }}
          source: "./deploy.sh"
          target: "/home/ubuntu/app"

      # 7. EC2에서 deploy.sh 실행
      - name: Run deploy.sh on EC2
        uses: appleboy/ssh-action@v1
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_KEY }}
          script: |
            cd /home/ubuntu/app
            echo "${{ secrets.APP_ENV }}" > .env
            chmod +x deploy.sh
            sudo ./deploy.sh ${{ github.sha }}
