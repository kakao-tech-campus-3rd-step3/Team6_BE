import{_ as d,c as s,o as e,ae as a}from"./chunks/framework.CBTkueSR.js";const _=JSON.parse('{"title":"WebSocket Error Subscription","description":"","frontmatter":{},"headers":[],"relativePath":"api/websocket/error-subscription.md","filePath":"api/websocket/error-subscription.md"}'),r={name:"api/websocket/error-subscription.md"};function i(l,t,n,o,p,E){return e(),s("div",null,[...t[0]||(t[0]=[a(`<h1 id="websocket-error-subscription" tabindex="-1">WebSocket Error Subscription <a class="header-anchor" href="#websocket-error-subscription" aria-label="Permalink to &quot;WebSocket Error Subscription&quot;">​</a></h1><p>WebSocket 통신 중 서버에서 오류가 발생하면, 서버는 해당 오류를 발생시킨 사용자에게 개인화된 에러 메시지를 전송합니다. 클라이언트는 이 메시지를 수신하기 위해 특정 큐를 구독해야 합니다.</p><h2 id="에러-구독" tabindex="-1">에러 구독 <a class="header-anchor" href="#에러-구독" aria-label="Permalink to &quot;에러 구독&quot;">​</a></h2><ul><li><strong>Topic</strong>: <code>/user/queue/errors</code></li><li><strong>설명</strong>: STOMP 메시지 처리 중 발생하는 모든 <code>BusinessException</code> 및 기타 예외에 대한 정보를 수신합니다. <code>@SendToUser</code> 어노테이션에 의해 각 사용자는 자신의 고유한 큐로 에러 응답을 받게 됩니다.</li></ul><h3 id="payload-errorapiresponse" tabindex="-1">Payload: <code>ErrorApiResponse</code> <a class="header-anchor" href="#payload-errorapiresponse" aria-label="Permalink to &quot;Payload: \`ErrorApiResponse\`&quot;">​</a></h3><table tabindex="0"><thead><tr><th style="text-align:left;">필드</th><th style="text-align:left;">타입</th><th style="text-align:left;">설명</th></tr></thead><tbody><tr><td style="text-align:left;">status</td><td style="text-align:left;">String</td><td style="text-align:left;">응답 상태 (<code>&quot;ERROR&quot;</code>)</td></tr><tr><td style="text-align:left;">data</td><td style="text-align:left;">Object</td><td style="text-align:left;"><code>null</code></td></tr><tr><td style="text-align:left;">error</td><td style="text-align:left;">Object</td><td style="text-align:left;">에러 정보</td></tr><tr><td style="text-align:left;">error.code</td><td style="text-align:left;">String</td><td style="text-align:left;">에러 코드 (e.g., <code>USER_NOT_FOUND</code>)</td></tr><tr><td style="text-align:left;">error.message</td><td style="text-align:left;">String</td><td style="text-align:left;">에러 메시지</td></tr></tbody></table><div class="vp-code-group vp-adaptive-theme"><div class="tabs"><input type="radio" name="group-SCfOC" id="tab-l_ao9HE" checked><label data-title="Response Example" for="tab-l_ao9HE">Response Example</label></div><div class="blocks"><div class="language-json vp-adaptive-theme active"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;status&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;ERROR&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;data&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">null</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;error&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;code&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;USER_NOT_FOUND&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;message&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;사용자를 찾을 수 없습니다.&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div></div></div><h3 id="발생-가능한-에러-코드" tabindex="-1">발생 가능한 에러 코드 <a class="header-anchor" href="#발생-가능한-에러-코드" aria-label="Permalink to &quot;발생 가능한 에러 코드&quot;">​</a></h3><table tabindex="0"><thead><tr><th>ErrorCode</th><th>내용</th><th>HTTP 코드</th></tr></thead><tbody><tr><td>INTERNAL_SERVER_ERROR</td><td>서버 내부 오류가 발생했습니다.</td><td>500</td></tr><tr><td>USER_NOT_FOUND</td><td>사용자를 찾을 수 없습니다.</td><td>404</td></tr><tr><td>INVALID_MBTI_TYPE</td><td>유효하지 않은 MBTI 타입입니다.</td><td>400</td></tr><tr><td>USER_NOT_AUTHENTICATED</td><td>사용자가 인증되지 않았습니다.</td><td>401</td></tr><tr><td>ROOM_NOT_FOUND</td><td>방을 찾을 수 없습니다.</td><td>404</td></tr><tr><td>ROOM_ALREADY_EXISTS</td><td>방이 이미 존재합니다.</td><td>409</td></tr><tr><td>WAITING_ROOM_NOT_FOUND</td><td>대기방을 찾을 수 없습니다.</td><td>404</td></tr><tr><td>WAITING_ROOM_FULL</td><td>대기방이 가득 찼습니다.</td><td>400</td></tr><tr><td>ALREADY_ROOM_JOIN</td><td>이미 방에 가입되어있습니다.</td><td>409</td></tr><tr><td>ROOM_CAPACITY_EXCEEDED</td><td>방 정원을 초과했습니다.</td><td>400</td></tr><tr><td>INVALID_STAGE_VALUE</td><td>유효하지 않은 스테이지 값입니다.</td><td>400</td></tr><tr><td>USER_NOT_IN_ROOM</td><td>사용자가 방에 속해있지 않습니다.</td><td>400</td></tr><tr><td>INVALID_STAGE_EVENT_VALUE</td><td>유효하지 않은 스테이지 이벤트 타입입니다.</td><td>400</td></tr><tr><td>INVALID_STAGE_TRANSITION</td><td>유효하지 않은 스테이지 전환입니다.</td><td>400</td></tr><tr><td>ROOM_STAGE_NOT_FOUND</td><td>방의 현재 스테이지를 찾을 수 없습니다.</td><td>404</td></tr><tr><td>ROOM_OWNER_NOT_FOUND</td><td>방장이 존재하지 않습니다.</td><td>500</td></tr><tr><td>ROOM_OWNER_MISMATCH</td><td>멤버에게는 허용되지 않은 요청입니다.</td><td>403</td></tr><tr><td>INVALID_ROOM_STAGE</td><td>유효하지 않은 방 스테이지입니다.</td><td>400</td></tr><tr><td>ROOM_STAGE_NOT_INITIALIZED</td><td>방 스테이지가 초기화되지 않았습니다.</td><td>400</td></tr><tr><td>INIT_STAGE_EVENT_NOT_ALLOWED</td><td>해당 요청에 INIT 이벤트는 허용되지 않습니다.</td><td>400</td></tr><tr><td>QUESTION_NOT_FOUND</td><td>질문을 찾을 수 없습니다.</td><td>404</td></tr><tr><td>INVALID_QUESTION_TYPE</td><td>유효하지 않은 질문 타입입니다.</td><td>400</td></tr><tr><td>INVALID_INTEREST_TYPE</td><td>유효하지 않은 관심사 타입입니다.</td><td>400</td></tr><tr><td>INVALID_GAME_CATEGORY</td><td>유효하지 않은 게임 카테고리입니다.</td><td>400</td></tr><tr><td>INVALID_JWT_PAYLOAD</td><td>유효하지 않은 JWT 페이로드입니다.</td><td>401</td></tr><tr><td>EXPIRED_JWT_TOKEN</td><td>만료된 JWT 토큰입니다.</td><td>401</td></tr><tr><td>INVALID_JWT_TOKEN</td><td>유효하지 않은 JWT 토큰입니다.</td><td>401</td></tr><tr><td>INVALID_JWT_SIGNATURE</td><td>유효하지 않은 JWT 서명입니다.</td><td>401</td></tr><tr><td>INVALID_REQUEST</td><td>유효하지 않은 요청입니다.</td><td>400</td></tr></tbody></table>`,9)])])}const c=d(r,[["render",i]]);export{_ as __pageData,c as default};
