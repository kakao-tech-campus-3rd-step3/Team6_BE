import{_ as i,c as a,o as t,ae as e}from"./chunks/framework.CBTkueSR.js";const d=JSON.parse('{"title":"WebSocket Error Subscription","description":"","frontmatter":{},"headers":[],"relativePath":"api/websocket/error-subscription.md","filePath":"api/websocket/error-subscription.md"}'),n={name:"api/websocket/error-subscription.md"};function r(o,s,p,l,h,k){return t(),a("div",null,[...s[0]||(s[0]=[e(`<h1 id="websocket-error-subscription" tabindex="-1">WebSocket Error Subscription <a class="header-anchor" href="#websocket-error-subscription" aria-label="Permalink to &quot;WebSocket Error Subscription&quot;">​</a></h1><p>WebSocket 통신 중 서버에서 오류가 발생하면, 서버는 해당 오류를 발생시킨 사용자에게 개인화된 에러 메시지를 전송합니다.</p><p>클라이언트는 이 메시지를 수신하기 위해 특정 큐를 구독해야 합니다.</p><h2 id="에러-구독" tabindex="-1">에러 구독 <a class="header-anchor" href="#에러-구독" aria-label="Permalink to &quot;에러 구독&quot;">​</a></h2><ul><li><strong>Topic</strong>: <code>/user/queue/errors</code></li><li><strong>설명</strong>: STOMP 메시지 처리 중 발생하는 모든 <code>BusinessException</code> 및 기타 예외에 대한 정보를 수신합니다. <code>@SendToUser</code> 어노테이션에 의해 각 사용자는 자신의 고유한 큐로 에러 응답을 받게 됩니다.</li><li><strong>Payload</strong>: <code>ErrorApiResponse</code><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;status&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;ERROR&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;data&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">null</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;error&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;code&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;ERROR_CODE&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;message&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Error message&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div></li></ul>`,5)])])}const E=i(n,[["render",r]]);export{d as __pageData,E as default};
